// <auto-generated />
using LogTailer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogTailer.Data.Migrations
{
    [DbContext(typeof(LogTailerContext))]
    [Migration("20210109124908_AdAllowFiltering")]
    partial class RemoveAllowFiltering
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("LogTailer.Domain.Models.OpenFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("OpenFiles");
                });

            modelBuilder.Entity("LogTailer.Domain.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("LogTailer.Domain.Models.OpenFile", b =>
                {
                    b.HasOne("LogTailer.Domain.Models.Session", "Session")
                        .WithMany("OpenFiles")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("LogTailer.Domain.Models.Session", b =>
                {
                    b.Navigation("OpenFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
